function [CleanEthiopiaDataArray,NumberOfMissingDataPerYear] = sortOutMissingData(ETDATA,RS,RI,colSevNew,colIncNew,AllYears)
    
    % function to check for missing data entries. Survey entries (rows in survey data-file) 
    % with missing data in one of the core data attributes are sorted out. 

    % initialize arrays for clean data 
    CleanEthiopiaDataArray={};
    cleandatacounter=1;
    SurveysWithMissingEntries=[];

    % loop survey array and check for missing entries
    for iEntry=1:length(ETDATA(:,1))

        % copy header
        if iEntry==1
            CleanEthiopiaDataArray(cleandatacounter,1:10)=ETDATA(1,1:10);
            CleanEthiopiaDataArray{cleandatacounter,colSevNew}=ETDATA{1,RS};
            CleanEthiopiaDataArray{cleandatacounter,colIncNew}=ETDATA{1,RI};
            cleandatacounter=cleandatacounter+1;
        else

            % check for missing data and throw away entries with missing data
            if ~isnan(ETDATA{iEntry,2})...
                    && ~isempty(ETDATA{iEntry,2})...
                    && (ETDATA{iEntry,2}~=0)...
                    && (ETDATA{iEntry,2}>=0)...
                    && ~isnan(ETDATA{iEntry,3})...
                    && ~isempty(ETDATA{iEntry,3})...
                    && (ETDATA{iEntry,3}~=0)...
                    && (ETDATA{iEntry,3}>0)...
                    && ~isnan(ETDATA{iEntry,4})...
                    && ~isempty(ETDATA{iEntry,4})...
                    && (ETDATA{iEntry,4}~=0)...
                    && (ETDATA{iEntry,4}>0)...
                    && ~isnan(ETDATA{iEntry,5})...
                    && ~isempty(ETDATA{iEntry,5})...
                    && (ETDATA{iEntry,5}~=0)...
                    && (ETDATA{iEntry,5}>0)...
                    && ~isnan(ETDATA{iEntry,6})...
                    && ~isempty(ETDATA{iEntry,6})...
                    && (ETDATA{iEntry,6}~=0)...
                    && (ETDATA{iEntry,6}>0)...
                    && ~isnan(ETDATA{iEntry,RS})...
                    && ~isempty(ETDATA{iEntry,RS})...
                    && (ETDATA{iEntry,RS}>=0)...
                    && ~isnan(ETDATA{iEntry,RI})...
                    && ~isempty(ETDATA{iEntry,RI})...
                    && (ETDATA{iEntry,RI}>=0)

                CleanEthiopiaDataArray(cleandatacounter,1:10)=ETDATA(iEntry,1:10);
                CleanEthiopiaDataArray{cleandatacounter,colSevNew}=ETDATA{iEntry,RS};  % severity
                CleanEthiopiaDataArray{cleandatacounter,colIncNew}=ETDATA{iEntry,RI};  % incidence
                cleandatacounter=cleandatacounter+1;
            else
                % write the index of surveys with missing entries
                SurveysWithMissingEntries=[SurveysWithMissingEntries,iEntry];
            end
        end
    end

    % count the number of missing entries per year
    NumberOfMissingDataPerYear=zeros(1,length(AllYears(1,:)));
    for iD=1:length(SurveysWithMissingEntries(1,:))
        % get index of survey in original data-array
        iIndex=SurveysWithMissingEntries(iD);
        % get year of survey from original data-array
        iYear=ETDATA{iIndex,2};
        % iterate the counter of missing data per year
        for iY=1:length(AllYears(1,:))
            checkYear=AllYears(iY);
            if iYear==checkYear
                NumberOfMissingDataPerYear(iY)=NumberOfMissingDataPerYear(iY)+1;
            end
        end
    end
end

